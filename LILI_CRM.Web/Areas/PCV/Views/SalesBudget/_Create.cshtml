@model LILI_CRM.Web.Areas.PCV.ViewModel.SalesBudgetModel
@using (Ajax.BeginForm("Create", "SalesBudget", null,
        new AjaxOptions
        {
            UpdateTargetId = "updateTargetId",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            OnSuccess = "AddSalesBudgetSuccess",
        }, new { @id = "addSalesBudgetForm" }))
{

    <div class="row-fluid form-horizontal">
        <div class="content">
            @Html.ValidationSummary(true)
            <div id="updateTargetId" class="alert alert-info" style="display: none;">
            </div>
        </div>

         @Html.HiddenFor(model => model.SalesPersonId)

        <div class="row-fluid">

			<div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.SalesPersonName)
                </span>
                <span class="span9 pull-left">
                    @Html.EditorFor(model => model.SalesPersonName)
                    @Html.ValidationMessageFor(model => model.SalesPersonName)
                </span>
            </div>
            

			<div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.ProductId)
                </span>
                <span class="span9 pull-left">
                    @Html.DropDownList("ProductId", Model.ddlProduct, new { @class = "clsProduct" ,Style = "background:#FFFFFF"})
                    @Html.ValidationMessageFor(model => model.ProductId)
                </span>
            </div>

		</div>
		<div class="row-fluid">

			<div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.DivisionName)
                </span>
                <span class="span9 pull-left">
                    @Html.EditorFor(model => model.DivisionName)
                    @Html.ValidationMessageFor(model => model.DivisionName)
                </span>
            </div>
			
			
			
			<div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.SBUId)
                </span>
                <span class="span9 pull-left">
                    @Html.DropDownList("SBUId", Model.ddlSBU, new { @class = "clsSUB" ,Style = "background:#FFFFFF"})
                    @Html.ValidationMessageFor(model => model.SBUId)
                </span>
            </div>             
        </div> 
		
		<div class="row-fluid">
		
			<div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.BudgetYear)
                </span>
                <span class="span9 pull-left">
                    @Html.EditorFor(model => model.BudgetYear)
                    @Html.ValidationMessageFor(model => model.BudgetYear)
                </span>
            </div>
		</div>           
        <div class="hr"></div>
		<div class="row-fluid">
			<span class="span5 pull-left">
                @*<div id="SampleRequestAddItemButtonZone" class="row-fluid">*@
                    <button type="button" class="btn btn-mini btn-primary" id="btnAddCustomer" name="btnAddCustomer"
                    value="Cancel" onclick="AddRow()">
                    <i class="icon-edit bigger-125"></i>Add to List</button>
                @*</div>*@
            </span>
		</div>

		<div class="row-fluid">
            <div id="SampleRequestDetailsGridZone">
                <div id="SalesBudgetDetailsKendoGrid">
                </div>
            </div>
        </div>

		<div class="hr"></div>	

        
        <div class="content pull-right"> 
		
		<button type="button" onclick="SalesBudgetSaveDetails()" class="btn btn-mini btn-primary" id="btnSalesBudgetSubmissionDetailList" name="btnSalesBudgetSubmissionDetailList">
            <i class="icon-save bigger-125"></i>Save</button>
            &nbsp;&nbsp;
            <button type="button" class="btn btn-mini btn-primary" id="btnCancelInvoice" name="btnCancelSampleRequest"
                value="Cancel" onclick=" $($('#addSalesBudgetDialog').dialog('close'));">
                <i class="icon-remove bigger-125"></i>Cancel</button>
        </div>

        

    </div>
}


<script type="text/javascript">


    var html = "<tr id='trParentHeaderCreate'>  <th colspan='1' class='k-header'><strong></strong></th> <th colspan='1' class='k-header'><strong></strong></th>  <th colspan='3' class='k-header'><strong>January</strong></th> <th colspan='3' class='k-header'><strong>February</strong></th> <th colspan='3' class='k-header'><strong>March</strong></th> <th colspan='3' class='k-header'><strong>April</strong></th> <th colspan='3' class='k-header'><strong>May</strong></th><th colspan='3' class='k-header'><strong>Jun</strong></th><th colspan='3' class='k-header'><strong>July</strong></th><th colspan='3' class='k-header'><strong>Augest</strong></th><th colspan='3' class='k-header'><strong>September</strong></th><th colspan='3' class='k-header'><strong>October</strong></th><th colspan='3' class='k-header'><strong>November</strong></th><th colspan='3' class='k-header'><strong>December</strong></th> </tr>";

    function onDataBoundCreate(arg) {
        var myElem = document.getElementById('trParentHeaderCreate');
        if (myElem == null) {
            $("#SalesBudgetDetailsKendoGrid").find("th.k-header").parent().before(html);
        }
    }

var dataSource = new kendo.data.DataSource({
        pageSize: 20,
        height: 400,
        autoSync: true,
        schema: {
            model: {
            id: "Id",
            fields: {                 
                CustomerId: { type: "number", editable: true },
                CustomerName: { defaultValue: { CustomerId: 0, CustomerName: "- Select One -"} },
				SupplierName: { defaultValue: { SupplierId: 0, SupplierName : "- Select One -"}},
				JanQty: { type: "decimal", editable: true },
				JanVal: { type: "decimal", editable: true },
				JanCom: { type: "decimal", editable: true },
				FebQty: { type: "decimal", editable: true },
				FebVal: { type: "decimal", editable: true },
				FebCom: { type: "decimal", editable: true },
				MarQty: { type: "decimal", editable: true },
				MarVal: { type: "decimal", editable: true },
				MarCom: { type: "decimal", editable: true },
				AprQty: { type: "decimal", editable: true },
				AprVal: { type: "decimal", editable: true },
				AprCom: { type: "decimal", editable: true },
				MayQty: { type: "decimal", editable: true },
				MayVal: { type: "decimal", editable: true },
				MayCom: { type: "decimal", editable: true },
				JunQty: { type: "decimal", editable: true },
				JunVal: { type: "decimal", editable: true },
				JunCom: { type: "decimal", editable: true },
				JulyQty: { type: "decimal", editable: true },
				JulyVal: { type: "decimal", editable: true },
				JulyCom: { type: "decimal", editable: true },
				AugQty: { type: "decimal", editable: true },
				AugVal: { type: "decimal", editable: true },
				AugCom: { type: "decimal", editable: true },
				SepQty: { type: "decimal", editable: true },
				SepVal: { type: "decimal", editable: true },
				SepCom: { type: "decimal", editable: true },
				OctQty: { type: "decimal", editable: true },
				OctVal: { type: "decimal", editable: true },
				OctCom: { type: "decimal", editable: true },
				NovQty: { type: "decimal", editable: true },
				NovVal: { type: "decimal", editable: true },
				NovCom: { type: "decimal", editable: true },
				DecQty: { type: "decimal", editable: true },
				DecVal: { type: "decimal", editable: true },
				DecCom: { type: "decimal", editable: true }

                 }
                }
            }
});
//"Please Select Customer"

$("#SalesBudgetDetailsKendoGrid").kendoGrid({
    dataSource: dataSource,
    height: 350,
    dataBound: onDataBoundCreate,
    scrollable: true,
    filterable: false,
    groupable: true,
    sortable: true,
    resizable: true,
    height: 350,
//    editable: "incell",
    columnMenu: false,
    scrollable: true,
    columns: [                
                { field: "CustomerId", title: "CustomerId", width: 200, hidden:true, filterable: false, sortable: false, locked: true },
                { field: "CustomerName", title: "Customer", width: 120, editor: customerDropDownEditor },
				{ field: "SupplierName", title: "Supplier", width: 120, editor: supplierDropDownEditor },				
				{ field: "JanQty", title: "JanQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JanVal", title: "JanVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JanCom", title: "JanCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "FebQty", title: "FebQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "FebVal", title: "FebVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "FebCom", title: "FebCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MarQty", title: "MarQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MarVal", title: "MarVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MarCom", title: "MarCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AprQty", title: "AprQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AprVal", title: "AprVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AprCom", title: "AprCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MayQty", title: "MayQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MayVal", title: "MayVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "MayCom", title: "MayCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JunQty", title: "JunQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JunVal", title: "JunVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JunCom", title: "JunCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JulyQty", title: "JulyQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JulyVal", title: "JulyVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "JulyCom", title: "JulyCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AugQty", title: "AugQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AugVal", title: "AugVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "AugCom", title: "AugCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "SepQty", title: "SepQty", width: 120, filterable: false, sortable: false, locked: true },
				{ field: "SepVal", title: "SepVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "SepCom", title: "SepCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "OctQty", title: "OctQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "OctVal", title: "OctVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "OctCom", title: "OctCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "NovQty", title: "NovQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "NovVal", title: "NovVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "NovCom", title: "NovCom", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "DecQty", title: "DecQty", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "DecVal", title: "DecVal", width: 100, filterable: false, sortable: false, locked: true },
				{ field: "DecCom", title: "DecCom", width: 100, filterable: false, sortable: false, locked: true },

                ],
    
      navigatable: false,
     editable: true
    });

	  
    function AddRow()
        {
        var sampleRequestDetGrid = $('#SalesBudgetDetailsKendoGrid').data('kendoGrid');
        var dataSource = sampleRequestDetGrid.dataSource;

        var articleCode = 'addrow';
			if(articleCode != '')
			{                       
				dataSource.add({							
					//CustomerId: "- Select One -", 
					CustomerName: "- Select One -",
					SupplierName: "- Select One -"					                            
					});
				}
				else{
					$("#message").show();
					$('#message').text(data).css({ 'color':'red' });
					$("#message").delay(3000).hide();
				}
	}
		

    // Add New Row To Grid End Here 


	 // Customer DropDown In Grid
 function customerDropDownEditor(container, options) {

     $('<input required data-text-field="CustomerName" data-value-field="CustomerId" data-bind="value:' + options.field + '"/>')
           .appendTo(container)
           .kendoDropDownList({
               autoBind: false,
               optionLabel: "...Select...",
               dataTextField: "CustomerName",
               dataValueField: "CustomerId",
               dataSource: {
                   type: "json",
                   transport: {
                       read: "/PCV/SalesBudget/ReadCustomerList"
                   }
               },
               change: function (e) {
                   var dataItem = e.sender.dataItem();
                   options.model.set("CustomerName", dataItem.CustomerName);
                   options.model.set("CustomerId", dataItem.CustomerId);
               }
           });
    }

		   // Supplier DropDown In Grid
 function supplierDropDownEditor(container, options) {

     $('<input required data-text-field="SupplierName" data-value-field="SupplierId" data-bind="value:' + options.field + '"/>')
           .appendTo(container)
           .kendoDropDownList({
               autoBind: false,
               optionLabel: "...Select...",
               dataTextField: "SupplierName",
               dataValueField: "Id",
               dataSource: {
                   type: "json",
                   transport: {
                       read: "/PCV/SalesBudget/ReadSupplierList"
                   }
               },
               change: function (e) {
                   var dataItem = e.sender.dataItem();
                   options.model.set("SupplierName", dataItem.SupplierName);
                   options.model.set("SupplierId", dataItem.SupplierId);
               }
           });
    }

	// Add New Row To Grid

	function SalesBudgetSaveDetails() 
    {
        //getting json data from kendo Grid
        var gridData = $("#SalesBudgetDetailsKendoGrid").data("kendoGrid").dataSource.data();
        var salesMasterList = [];
        var salesDetailList = [];

		var SalesBudgetMasterViewModel = {};
		SalesBudgetMasterViewModel.SalesPersonId = $('#SalesPersonId').val();
		SalesBudgetMasterViewModel.BudgetYear = $('#BudgetYear').val();
		SalesBudgetMasterViewModel.ProductId = $('#ProductId').val();
		SalesBudgetMasterViewModel.SBUId = $('#SBUId').val();
        salesMasterList.push(SalesBudgetMasterViewModel);



        //loop through each json data from kendo Grid		
        for (var i = 0; i < gridData.length; i++) {

            var currentDataItem = gridData[i];

			//console.log(currentDataItem);

            var SalesBudgetDetailViewModel = {};           
            SalesBudgetDetailViewModel.CustomerId = currentDataItem.CustomerId;
            SalesBudgetDetailViewModel.SupplierId = currentDataItem.SupplierId;

            SalesBudgetDetailViewModel.JanQty = currentDataItem.JanQty;
            SalesBudgetDetailViewModel.JanVal = currentDataItem.JanVal;
			SalesBudgetDetailViewModel.JanCom = currentDataItem.JanCom;

			SalesBudgetDetailViewModel.FebQty = currentDataItem.FebQty;
            SalesBudgetDetailViewModel.FebVal = currentDataItem.FebVal;
			SalesBudgetDetailViewModel.FebCom = currentDataItem.FebCom;

			SalesBudgetDetailViewModel.MarQty = currentDataItem.MarQty;
            SalesBudgetDetailViewModel.MarVal = currentDataItem.MarVal;
            SalesBudgetDetailViewModel.MarCom = currentDataItem.MarCom;

            SalesBudgetDetailViewModel.AprQty = currentDataItem.AprQty;
            SalesBudgetDetailViewModel.AprVal = currentDataItem.AprVal;
            SalesBudgetDetailViewModel.AprCom = currentDataItem.AprCom;

            SalesBudgetDetailViewModel.MayQty = currentDataItem.MayQty;
            SalesBudgetDetailViewModel.MayVal = currentDataItem.MayVal;
            SalesBudgetDetailViewModel.MayCom = currentDataItem.MayCom;

            SalesBudgetDetailViewModel.JunQty = currentDataItem.JunQty;
            SalesBudgetDetailViewModel.JunVal = currentDataItem.JunVal;
            SalesBudgetDetailViewModel.JunCom = currentDataItem.JunCom;

            SalesBudgetDetailViewModel.JulyQty = currentDataItem.JulyQty;
            SalesBudgetDetailViewModel.JulyVal = currentDataItem.JulyVal;
            SalesBudgetDetailViewModel.JulyCom = currentDataItem.JulyCom;

            SalesBudgetDetailViewModel.AugQty = currentDataItem.AugQty;
            SalesBudgetDetailViewModel.AugVal = currentDataItem.AugVal;
            SalesBudgetDetailViewModel.AugCom = currentDataItem.AugCom;

            SalesBudgetDetailViewModel.SepQty = currentDataItem.SepQty;
            SalesBudgetDetailViewModel.SepVal = currentDataItem.SepVal;
            SalesBudgetDetailViewModel.SepCom = currentDataItem.SepCom;

            SalesBudgetDetailViewModel.OctQty = currentDataItem.OctQty;
            SalesBudgetDetailViewModel.OctVal = currentDataItem.OctVal;
            SalesBudgetDetailViewModel.OctCom = currentDataItem.OctCom;

            SalesBudgetDetailViewModel.NovQty = currentDataItem.NovQty;
            SalesBudgetDetailViewModel.NovVal = currentDataItem.NovVal;
            SalesBudgetDetailViewModel.NovCom = currentDataItem.NovCom;

            SalesBudgetDetailViewModel.DecQty = currentDataItem.DecQty;
            SalesBudgetDetailViewModel.DecVal = currentDataItem.DecVal;
            SalesBudgetDetailViewModel.DecCom = currentDataItem.DecCom;

            salesDetailList.push(SalesBudgetDetailViewModel);
        }

		//url
        var postUrl = '@Url.Content("~/PCV/SalesBudget/SetSampleRequestDetailsListForSave")';

      

     //Post json data from kendo Grid to Controller
        $.ajax({
            url: postUrl,
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify({ 'lstSampleSubmissionMaster': salesMasterList, 'lstSampleSubmissionDetails': salesDetailList }),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {

                if (result != '') {
                    $("#updateTargetId").html(result.strMessage).show();                   
                    var dGrid = $('#SalesBudgetKendoGrid').data('kendoGrid');
                    dGrid.dataSource.read();
                }

            },
            error: function (objAjaxRequest, strError) {
                var respText = objAjaxRequest.responseText;
                console.log(respText);
            }
        });
    }


</script>

