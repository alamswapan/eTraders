@model LILI_CRM.Web.Areas.PCV.ViewModel.QuoteModel
@using (Ajax.BeginForm("Create", "Quote", null,
        new AjaxOptions
        {
            UpdateTargetId = "updateTargetId",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            OnSuccess = "AddQuoteSuccess",
        }, new { @id = "addQuoteForm" }))
{

    <div class="row-fluid form-horizontal">
        <div class="content">
            @Html.ValidationSummary(true)
            <div id="updateTargetId" class="alert alert-info" style="display: none;">
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.QuoteDate)
                </span>
                <span class="span9 pull-left">
                    @Html.EditorFor(model => model.QuoteDate)
                    @Html.ValidationMessageFor(model => model.QuoteDate)
                </span>
            </div>
            <div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.CustomerId)
                </span>
                <span class="span9 pull-left">
                    @Html.DropDownList("CustomerId", Model.ddlCustomer, new { @class = "clsCustomerId" })
                    @Html.ValidationMessageFor(model => model.CustomerId)
                    @*@Html.DropDownList("CusContactId", Model.ddlContactPerson, new { @class = "clsCusContactId"})
                    @Html.ValidationMessageFor(model => model.CusContactId)*@
                </span>
            </div> 
        </div>

        <div class="row-fluid">
            <div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.ArticleCode)
                </span>
                <span class="span4 pull-left">
                    @Html.TextBoxFor(model => model.ArticleCode, new { @style = "text-align: left !important;" })
                    @Html.ValidationMessageFor(model => model.ArticleCode)
                </span>
                <span class="span5 pull-left">
                    @*<div id="QuoteAddItemButtonZone" class="row-fluid">*@
                        <button type="button" class="btn btn-mini btn-primary" id="btnAddArticle" name="btnAddArticle"
                        value="Cancel" onclick="AddRow()">
                        <i class="icon-edit bigger-125"></i>Add to List</button>
                    @*</div>*@
                </span>
            </div>
            <div class="span6 pull-left">
                <span class="span3">
                    @Html.LabelFor(model => model.OrganizationId)
                </span>
                <span class="span9 pull-left">
                    @Html.DropDownList("OrganizationId", Model.ddlOrganization, new { @class = "clsOrganization" ,Style = "background:#FFDAB9"})
                    @Html.ValidationMessageFor(model => model.OrganizationId)
                </span>
            </div> 
        </div> 

        <div class="row-fluid">
            <div id="QuoteDetailsGridZone">
                <div id="QuoteDetailsKendoGrid">
                </div>
            </div>
        </div>
            
        <div class="hr"></div>
        &nbsp
        <div class="row-fluid">
        <table>
        @using (Html.BeginForm())
        { 
            for (int i = 0; i < Model.documentModels.Count; i++)
            { 
                <tr>
                    <td>
                        @Html.CheckBoxFor(m => Model.documentModels[i].IsSelected)
                        @Model.documentModels[i].DocName
                        @Html.HiddenFor(m => Model.documentModels[i].Id)
                        @Html.HiddenFor(m => Model.documentModels[i].DocName)
                    </td>                
                </tr>
            }
        }
        </table>  
        </div>



        <div class="hr">
        </div>
        <div class="content pull-right">
            <button type="button" class="btn btn-mini btn-primary" id="btnPrepsreQuoteDetailList" name="btnPrepsreQuoteDetailList"
            onclick="PreSaveQuoteDetails()">
            <i class="icon-save bigger-125"></i>Prepare List</button>

            <button type="submit" class="btn btn-mini btn-primary" id="btnAddQuote" name="btnAddQuote">
                <i class="icon-save bigger-125"></i>Save</button>
            &nbsp;&nbsp;
            <button type="button" class="btn btn-mini btn-primary" id="btnCancelInvoice" name="btnCancelQuote"
                value="Cancel" onclick=" $($('#addQuoteDialog').dialog('close'));">
                <i class="icon-remove bigger-125"></i>Cancel</button>
        </div>
    </div>
   
}



@*  Quote Detail Kendo Grid start *@
<script type="text/javascript">

    var dataSource = new kendo.data.DataSource({
        pageSize: 20,
        height: 400,
        autoSync: true,
        //data: '',
        //batch: true,
        schema: {
            model: {
            id: "Id",
            fields: {
                Id: { type: "number", editable: false },
                QuoteId: { type: "number", editable: false },
                ArticleId: { type: "number", editable: false },
                //ArticleCode: { type: "string", editable: false },
                ArticleName: { type: "string", editable: false },
                BaseUnit: { type: "string", editable: false },
                QuoteQuantity: { type: "number", editable: true, validation: { required: true, min: 1, max: 9999999999} },
                MOQ: { type: "number", editable: true, validation: { required: true, min: 1, max: 9999999999} },
                ValidityDate: { type: "date", editable: true },
                UnitPrice: { type: "number", editable: true, validation: { required: true, min: 1, max: 9999999999} },
                SupplierId: { type: "number", editable: true },
                SupplierName: { defaultValue: { SupplierId: 0, SupplierName: "- Select One -"} },
                Origin: { type: "string", editable: true },
                ApproveState: { defaultValue: { ApproveState: 0, ApproveState: "- Select One -"} },
                DetailText: { type: "string", editable: true }
                //ActionLink: { type: "string" }
                 }
                }
            }
});
//"Please Select Customer"

$("#QuoteDetailsKendoGrid").kendoGrid({
    dataSource: dataSource,
//    resizable: true,
    height: 350,
    scrollable: true,
    filterable: false,
    groupable: true,
    sortable: true,
    resizable: true,
    height: 350,
    //editable: true,
//    editable: "incell",
    columnMenu: false,
    scrollable: true,
    columns: [
                { field: "Id", title: "Id", width: 100, hidden: true, filterable: false, sortable: false, locked: true },
                { field: "QuoteId", title: "Quote Id", width: 100, hidden: true, filterable: false, sortable: false, locked: true },
                { field: "ArticleId", title: "Article Id", width: 100, hidden: true, filterable: false, sortable: false, locked: true },
                //{ field: "ArticleCode", title: "Article Code", width: 100, hidden: true, filterable: false, sortable: false, locked: true },
                { field: "ArticleName", title: "Article Name", width: 200, filterable: false, sortable: false, locked: true },
                { field: "BaseUnit", title: "Unit", width: 80, filterable: false, sortable: false, locked: true },
                { field: "QuoteQuantity", title: "Quantity", format: "{0:n}", width: 120, sortable: false, locked: false, groupable: false, attributes: { style: "text-align:right;"} },
                { field: "MOQ", title: "MOQ", format: "{0:n}", width: 120, sortable: false, locked: false, groupable: false, attributes: { style: "text-align:right;"} },
                { field: "ValidityDate", title: "Validity", format: "{0: dd/MM/yyyy}", width: 120, filterable: false, sortable: false, locked: true },
                { field: "UnitPrice", title: "Unit Price", format: "{0:n}", width: 120, sortable: false, locked: false, groupable: false, attributes: { style: "text-align:right;"} },
                { field: "SupplierId", title: "Supplier Id", width: 200, hidden: true, filterable: false, sortable: false, locked: true },
                { field: "SupplierName", title: "Supplier", width: 400, editor: supplierDropDownEditor },

                { field: "Origin", title: "Origin", width: 200, filterable: false, sortable: false, locked: true },
                { field: "ApproveState", title: "Result", width: 200, editor: resultDropDownEditor },
                { field: "DetailText", title: "Remarks", width: 300, filterable: false, sortable: false, locked: true },
                { command: "destroy", title: " ", width: 100 }],
    
      navigatable: false,
     editable: true
    });


 // Customer DropDown In Grid
 function supplierDropDownEditor(container, options) {

     $('<input required data-text-field="SupplierName" data-value-field="SupplierId" data-bind="value:' + options.field + '"/>')
           .appendTo(container)
           .kendoDropDownList({
               autoBind: false,
               optionLabel: "...Select...",
               dataTextField: "SupplierName",
               dataValueField: "SupplierId",
               dataSource: {
                   type: "json",
                   transport: {
                       read: "/PCV/Quote/ReadSupplierList"
                   }
               },
               change: function (e) {
                   var dataItem = e.sender.dataItem();
                   options.model.set("SupplierName", dataItem.SupplierName);
                   options.model.set("SupplierId", dataItem.SupplierId);
               }
           });
       }


       function resultDropDownEditor(container, options) {

           $('<input required data-text-field="ApproveStateName" data-value-field="ApproveStateId" data-bind="value:' + options.field + '"/>')
           .appendTo(container)
           .kendoDropDownList({
               autoBind: false,
               optionLabel: "...Select...",
               dataTextField: "ApproveState",
               dataValueField: "ApproveStateId",
               dataSource: {
                   type: "json",
                   transport: {
                       read: "/PCV/Quote/ReadApproveStatusList"
                   }
               },
               change: function (e) {
                   var dataItem = e.sender.dataItem();
                   options.model.set("ApproveState", dataItem.ApproveStateName);
               }
           });
       }


//Quote Detail Kendo Grid End Here 

//-----------------------------------------------------
</script>

@*Add New Row to Grid*@
<script type="text/javascript">
    // Add New Row To Grid
    function AddRow()
        {
            var QuoteDetGrid = $('#QuoteDetailsKendoGrid').data('kendoGrid');
            var dataSource = QuoteDetGrid.dataSource;

            var articleCode = $('#ArticleCode').val();

            $.get(
                    "@Url.Action("AddArticleToGrid")",
                    {'articleCode':articleCode},
                    function(jresult){
                        if(jresult != '')
                        {
                            if (Find_Grid_Item(jresult[0].Id))
                            {
                                alert('This Element is Allready Exists');
                                return;
                            }
                            dataSource.add({ ArticleId: jresult[0].Id, ArticleCode: jresult[0].ArticleCode, 
                                ArticleName: jresult[0].ArticleName,     BaseUnit: jresult[0].BaseUnit,
                                QuoteQuantity: 1,
                                //SupplierId: 0, 
                                SupplierName: "- Select One -",
                                Discontinued: false 
                                });
                            }
                            else{
                                $("#message").show();
                                $('#message').text(data).css({ 'color':'red' });
                                $("#message").delay(3000).hide();
                            }
                        }
                    );
        $('#ArticleCode').val('');
        }
    // Add New Row To Grid End Here 

    function Find_Grid_Item(itemId)
    {
            //alert (itemId);
        var rowNo =0;
        var gridData = $("#QuoteDetailsKendoGrid").data("kendoGrid").dataSource.data();

        for (var index = 0; index < gridData.length; index++) 
        {
            
            var currentDataItem = gridData[index];
            if (itemId==currentDataItem.ArticleId)
            {
                rowNo=index;
                return true;
            }
        }
//        if (rowNo>0)
//        {return true;}
//        else{
//        return false;
        //}
    }
</script>

@*Save Grid Data*@
<script type="text/javascript">

    function SaveQuoteDetails() 
    {
        //getting json data from kendo Grid
        var gridData = $("#QuoteDetailsKendoGrid").data("kendoGrid").dataSource.data();
        var quoteDetailList = [];
        //loop through each json data from kendo Grid
        for (var i = 0; i < gridData.length; i++) {

            var currentDataItem = gridData[i];

            var QuoteDetailViewModel = {};
            QuoteDetailViewModel.Id = currentDataItem.Id;
            QuoteDetailViewModel.QuoteId = currentDataItem.QuoteId;
            QuoteDetailViewModel.ArticleId = currentDataItem.ArticleId;
            QuoteDetailViewModel.QuoteQuantity = currentDataItem.QuoteQuantity;
            QuoteDetailViewModel.MOQ = currentDataItem.MOQ;
            QuoteDetailViewModel.ValidityDate = currentDataItem.ValidityDate;
            QuoteDetailViewModel.UnitPrice = currentDataItem.UnitPrice;
            QuoteDetailViewModel.SupplierId = currentDataItem.SupplierId;
            QuoteDetailViewModel.Origin = currentDataItem.Origin;
            QuoteDetailViewModel.ApproveState = currentDataItem.ApproveState;
            QuoteDetailViewModel.DetailText = currentDataItem.DetailText;   
            quoteDetailList.push(QuoteDetailViewModel);
        }

        var postUrl = '@Url.Content("~/PCV/Quote/SetQuoteDetailsListForSave")';
        //alert(postUrl);
        var paramValue = JSON.stringify({ lstQuoteDetails: quoteDetailList });
        //alert("Test");
        alert(paramValue);

     //Post json data from kendo Grid to Controller
        $.ajax({
            url: postUrl,
            type: 'POST',
            dataType: 'json',
            data: paramValue,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                    //if (result !='') 
                    //    {
                    //        alert(jresult[0].TP);
                    //        //TP= jresult[0].TP;
                    //        $('#TP').val(result[0].TP);
                    //    }
                    //        alert(result);

                console.log(result);
            },
            error: function (objAjaxRequest, strError) {
                var respText = objAjaxRequest.responseText;
                console.log(respText);
            }
        });
    }

    function PreSaveQuoteDetails() {

        SaveQuoteDetails();

    }
</script>

@*On Document Ready*@
<script type="text/javascript">
$(document).ready(function () {

    $("#ArticleCode").kendoAutoComplete({
        dataTextField: "ArticleCode",
            dataSource: {
                transport: {
                    read: {
                        url: "/PCV/Quote/PopulateArticleAutoComplete/",
                        serverPaging: true,
                        type: "POST",
                        data: {
                        // json: JSON.stringify([{"ProductCode": "A001"}, {"ProductCode": "A002"}] )
                    }
                }
            }
        }
    });

//    $("input:submit, input:button, button", ".jqUI").button();
//    $('.date').datepicker({ dateFormat: "dd/mm/yy" });

});

</script>


<script type="text/javascript">


    $(function () {
        $('#SupplierId').on('change',function(){
            
            $('#SupplierAddress').val("");

            var suppId = $(this).val();

            if(suppId == "0")
            {
               return;
            }
            $.get(
                    "@Url.Action("GetSupplierDetails")",
                    {'id':suppId},
                    function(jresult){
                        if(jresult != ''){
                             $('#SupplierAddress').val(jresult[0].Address);
                        }
                        else{
                            $("#message").show();
                            $('#message').text(data).css({ 'color':'red' });
                            $("#message").delay(3000).hide();
                        }
                    }
                );

        });
    });

</script>